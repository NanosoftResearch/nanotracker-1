#!/usr/bin/python3

import sys
import can
import time
import os
import traceback
import requests

import itertools

from threading import Thread


PID_REQUEST         = 0x1CEA0000
PID_REPLY           = 0x7E8

IS_DEBUG = True

if not IS_DEBUG:
    print('waiting 10 seconds before starting to send data on the CAN network')
    time.sleep(10)

print('Ready')

while True:

    # Main loop
    try:

        bus = can.interface.Bus(channel='can0', bustype='socketcan_native')

        SEND_REQUESTS = {
            0x1CEA0000: [[0xA4,0xFE,0x00],[0xDF,0xFE,0x00],[0xE5,0xFE,0x00],[0xE7,0xFE,0x00],[0xEE,0xFE,0x00]]
        }
        
        #all possible j1939 PGNs (for seaching for vali
        SEND_REQUESTS_ALL = {
            0x1CEA0000: [[0x00,0x00,0x00],[0x00,0x01,0x00],[0x00,0x04,0x00],[0x00,0x07,0x00],[0x00,0x08,0x00],[0x00,0x9B,0x00],[0x00,0x9C,0x00],[0x00,0x9D,0x00],[0x00,0xA5,0x00],[0x00,0xA6,0x00],[0x00,0xA7,0x00],[0x00,0xA8,0x00],[0x00,0xA9,0x00],[0x00,0xAE,0x00],[0x00,0xCF,0x00],[0x00,0xD0,0x00],[0x00,0xD1,0x00],[0x00,0xD2,0x00],[0x00,0xD5,0x00],[0x00,0xDC,0x00],[0x00,0xDD,0x00],[0x00,0xDE,0x00],[0x00,0xE0,0x00],[0x00,0xF0,0x00],[0x01,0xF0,0x00],[0x02,0xF0,0x00],[0x03,0xF0,0x00],[0x04,0xF0,0x00],[0x05,0xF0,0x00],[0x06,0xF0,0x00],[0x07,0xF0,0x00],[0x08,0xF0,0x00],[0x09,0xF0,0x00],[0x0A,0xF0,0x00],[0x0B,0xF0,0x00],[0x0C,0xF0,0x00],[0x0D,0xF0,0x00],[0x0E,0xF0,0x00],[0x0F,0xF0,0x00],[0x10,0xF0,0x00],[0x11,0xF0,0x00],[0x12,0xF0,0x00],[0x13,0xF0,0x00],[0x14,0xF0,0x00],[0x16,0xF0,0x00],[0x17,0xF0,0x00],[0x18,0xF0,0x00],[0x19,0xF0,0x00],[0x1A,0xF0,0x00],[0x1D,0xF0,0x00],[0x21,0xF0,0x00],[0x23,0xF0,0x00],[0x24,0xF0,0x00],[0x25,0xF0,0x00],[0x26,0xF0,0x00],[0x27,0xF0,0x00],[0x28,0xF0,0x00],[0x23,0xFD,0x00],[0x24,0xFD,0x00],[0x25,0xFD,0x00],[0x26,0xFD,0x00],[0x27,0xFD,0x00],[0x28,0xFD,0x00],[0x29,0xFD,0x00],[0x2A,0xFD,0x00],[0x2B,0xFD,0x00],[0x2C,0xFD,0x00],[0x2D,0xFD,0x00],[0x2E,0xFD,0x00],[0x2F,0xFD,0x00],[0x30,0xFD,0x00],[0x31,0xFD,0x00],[0x33,0xFD,0x00],[0x34,0xFD,0x00],[0x35,0xFD,0x00],[0x36,0xFD,0x00],[0x37,0xFD,0x00],[0x38,0xFD,0x00],[0x39,0xFD,0x00],[0x3A,0xFD,0x00],[0x3B,0xFD,0x00],[0x3C,0xFD,0x00],[0x3D,0xFD,0x00],[0x3E,0xFD,0x00],[0x3F,0xFD,0x00],[0x40,0xFD,0x00],[0x41,0xFD,0x00],[0x44,0xFD,0x00],[0x45,0xFD,0x00],[0x46,0xFD,0x00],[0x47,0xFD,0x00],[0x48,0xFD,0x00],[0x49,0xFD,0x00],[0x51,0xFD,0x00],[0x52,0xFD,0x00],[0x53,0xFD,0x00],[0x65,0xFD,0x00],[0x66,0xFD,0x00],[0x67,0xFD,0x00],[0x68,0xFD,0x00],[0x69,0xFD,0x00],[0x6A,0xFD,0x00],[0x6B,0xFD,0x00],[0x6C,0xFD,0x00],[0x6D,0xFD,0x00],[0x6E,0xFD,0x00],[0x6F,0xFD,0x00],[0x70,0xFD,0x00],[0x71,0xFD,0x00],[0x72,0xFD,0x00],[0x73,0xFD,0x00],[0x74,0xFD,0x00],[0x75,0xFD,0x00],[0x76,0xFD,0x00],[0x77,0xFD,0x00],[0x78,0xFD,0x00],[0x79,0xFD,0x00],[0x7A,0xFD,0x00],[0x7B,0xFD,0x00],[0x7C,0xFD,0x00],[0x7E,0xFD,0x00],[0x7F,0xFD,0x00],[0x81,0xFD,0x00],[0x83,0xFD,0x00],[0x84,0xFD,0x00],[0x85,0xFD,0x00],[0x86,0xFD,0x00],[0x87,0xFD,0x00],[0x88,0xFD,0x00],[0x89,0xFD,0x00],[0x8A,0xFD,0x00],[0x8B,0xFD,0x00],[0x8C,0xFD,0x00],[0x90,0xFD,0x00],[0x92,0xFD,0x00],[0x94,0xFD,0x00],[0x95,0xFD,0x00],[0x98,0xFD,0x00],[0x99,0xFD,0x00],[0x9B,0xFD,0x00],[0x9C,0xFD,0x00],[0x9D,0xFD,0x00],[0x9E,0xFD,0x00],[0x9F,0xFD,0x00],[0xA0,0xFD,0x00],[0xA1,0xFD,0x00],[0xA2,0xFD,0x00],[0xA3,0xFD,0x00],[0xA4,0xFD,0x00],[0xA5,0xFD,0x00],[0xA8,0xFD,0x00],[0xA9,0xFD,0x00],[0xAA,0xFD,0x00],[0xAE,0xFD,0x00],[0xAF,0xFD,0x00],[0xB0,0xFD,0x00],[0xB1,0xFD,0x00],[0xB2,0xFD,0x00],[0xB3,0xFD,0x00],[0xB4,0xFD,0x00],[0xB9,0xFD,0x00],[0xBA,0xFD,0x00],[0xBB,0xFD,0x00],[0xBC,0xFD,0x00],[0xBD,0xFD,0x00],[0xBE,0xFD,0x00],[0xBF,0xFD,0x00],[0xC0,0xFD,0x00],[0xC1,0xFD,0x00],[0xC4,0xFD,0x00],[0xC5,0xFD,0x00],[0xC6,0xFD,0x00],[0xC7,0xFD,0x00],[0xC8,0xFD,0x00],[0xC9,0xFD,0x00],[0xCA,0xFD,0x00],[0xCB,0xFD,0x00],[0xCC,0xFD,0x00],[0xCD,0xFD,0x00],[0xD0,0xFD,0x00],[0xD1,0xFD,0x00],[0xD2,0xFD,0x00],[0xD3,0xFD,0x00],[0xD4,0xFD,0x00],[0xD5,0xFD,0x00],[0xD6,0xFD,0x00],[0xD7,0xFD,0x00],[0xD8,0xFD,0x00],[0xD9,0xFD,0x00],[0xDA,0xFD,0x00],[0xDB,0xFD,0x00],[0xDC,0xFD,0x00],[0xDF,0xFD,0x00],[0xE0,0xFD,0x00],[0xE1,0xFD,0x00],[0xE2,0xFD,0x00],[0xE3,0xFD,0x00],[0xE4,0xFD,0x00],[0xE5,0xFD,0x00],[0xE6,0xFD,0x00],[0x07,0xFE,0x00],[0x40,0xFE,0x00],[0x41,0xFE,0x00],[0x4A,0xFE,0x00],[0x4B,0xFE,0x00],[0x4C,0xFE,0x00],[0x4D,0xFE,0x00],[0x4E,0xFE,0x00],[0x4F,0xFE,0x00],[0x50,0xFE,0x00],[0x51,0xFE,0x00],[0x52,0xFE,0x00],[0x53,0xFE,0x00],[0x54,0xFE,0x00],[0x55,0xFE,0x00],[0x56,0xFE,0x00],[0x57,0xFE,0x00],[0x58,0xFE,0x00],[0x59,0xFE,0x00],[0x5A,0xFE,0x00],[0x5B,0xFE,0x00],[0x66,0xFE,0x00],[0x67,0xFE,0x00],[0x68,0xFE,0x00],[0x69,0xFE,0x00],[0x6A,0xFE,0x00],[0x6B,0xFE,0x00],[0x6C,0xFE,0x00],[0x6D,0xFE,0x00],[0x6E,0xFE,0x00],[0x6F,0xFE,0x00],[0x70,0xFE,0x00],[0x71,0xFE,0x00],[0x72,0xFE,0x00],[0x73,0xFE,0x00],[0x74,0xFE,0x00],[0x75,0xFE,0x00],[0x76,0xFE,0x00],[0x77,0xFE,0x00],[0x78,0xFE,0x00],[0x79,0xFE,0x00],[0x7A,0xFE,0x00],[0x7B,0xFE,0x00],[0x7C,0xFE,0x00],[0x7D,0xFE,0x00],[0x7E,0xFE,0x00],[0x7F,0xFE,0x00],[0x80,0xFE,0x00],[0x81,0xFE,0x00],[0x82,0xFE,0x00],[0x83,0xFE,0x00],[0x84,0xFE,0x00],[0x85,0xFE,0x00],[0x86,0xFE,0x00],[0x87,0xFE,0x00],[0x88,0xFE,0x00],[0x89,0xFE,0x00],[0x8A,0xFE,0x00],[0x8B,0xFE,0x00],[0x8C,0xFE,0x00],[0x8D,0xFE,0x00],[0x8E,0xFE,0x00],[0x8F,0xFE,0x00],[0x90,0xFE,0x00],[0x91,0xFE,0x00],[0x92,0xFE,0x00],[0x93,0xFE,0x00],[0x94,0xFE,0x00],[0x95,0xFE,0x00],[0x96,0xFE,0x00],[0x97,0xFE,0x00],[0x98,0xFE,0x00],[0x99,0xFE,0x00],[0x9A,0xFE,0x00],[0x9B,0xFE,0x00],[0x9C,0xFE,0x00],[0x9D,0xFE,0x00],[0x9E,0xFE,0x00],[0x9F,0xFE,0x00],[0xA0,0xFE,0x00],[0xA1,0xFE,0x00],[0xA2,0xFE,0x00],[0xA3,0xFE,0x00],[0xA4,0xFE,0x00],[0xA5,0xFE,0x00],[0xA6,0xFE,0x00],[0xA7,0xFE,0x00],[0xA8,0xFE,0x00],[0xA9,0xFE,0x00],[0xAA,0xFE,0x00],[0xAB,0xFE,0x00],[0xAC,0xFE,0x00],[0xAD,0xFE,0x00],[0xAE,0xFE,0x00],[0xAF,0xFE,0x00],[0xB0,0xFE,0x00],[0xB1,0xFE,0x00],[0xB2,0xFE,0x00],[0xB3,0xFE,0x00],[0xB4,0xFE,0x00],[0xB5,0xFE,0x00],[0xB6,0xFE,0x00],[0xB7,0xFE,0x00],[0xB8,0xFE,0x00],[0xB9,0xFE,0x00],[0xBA,0xFE,0x00],[0xBB,0xFE,0x00],[0xBC,0xFE,0x00],[0xBD,0xFE,0x00],[0xBE,0xFE,0x00],[0xBF,0xFE,0x00],[0xC0,0xFE,0x00],[0xC1,0xFE,0x00],[0xC2,0xFE,0x00],[0xC3,0xFE,0x00],[0xC5,0xFE,0x00],[0xC7,0xFE,0x00],[0xD5,0xFE,0x00],[0xD9,0xFE,0x00],[0xDA,0xFE,0x00],[0xDB,0xFE,0x00],[0xDC,0xFE,0x00],[0xDD,0xFE,0x00],[0xDE,0xFE,0x00],[0xDF,0xFE,0x00],[0xE0,0xFE,0x00],[0xE1,0xFE,0x00],[0xE2,0xFE,0x00],[0xE3,0xFE,0x00],[0xE4,0xFE,0x00],[0xE5,0xFE,0x00],[0xE6,0xFE,0x00],[0xE7,0xFE,0x00],[0xE8,0xFE,0x00],[0xE9,0xFE,0x00],[0xEA,0xFE,0x00],[0xEB,0xFE,0x00],[0xEC,0xFE,0x00],[0xED,0xFE,0x00],[0xEE,0xFE,0x00],[0xEF,0xFE,0x00],[0xF0,0xFE,0x00],[0xF1,0xFE,0x00],[0xF2,0xFE,0x00],[0xF3,0xFE,0x00],[0xF4,0xFE,0x00],[0xF5,0xFE,0x00],[0xF6,0xFE,0x00],[0xF7,0xFE,0x00],[0xF8,0xFE,0x00],[0xF9,0xFE,0x00],[0xFA,0xFE,0x00],[0xFB,0xFE,0x00],[0xFC,0xFE,0x00],[0xFD,0xFE,0x00],[0xFE,0xFE,0x00],[0xFF,0xFE,0x00]]
        }
        
        #komatzu specific (excavator) PGN supported list
        SEND_REQUESTS_KONATZU_EXC = {
            0x1CEA0000: [[0x01,0xF0,0x00],[0x03,0xF0,0x00],[0x04,0xF0,0x00],[0xCA,0xFD,0x00],[0xCB,0xFD,0x00],[0x8C,0xFE,0x00],[0x9F,0xFE,0x00],[0xA0,0xFE,0x00],[0xA4,0xFE,0x00],[0xB1,0xFE,0x00],[0xBD,0xFE,0x00],[0xDC,0xFE,0x00],[0xDF,0xFE,0x00],[0xE4,0xFE,0x00],[0xE5,0xFE,0x00],[0xE6,0xFE,0x00],[0xE9,0xFE,0x00],[0xEE,0xFE,0x00],[0xEF,0xFE,0x00],[0xF1,0xFE,0x00],[0xF2,0xFE,0x00],[0xF5,0xFE,0x00],[0xF6,0xFE,0x00],[0xF7,0xFE,0x00],[0xFF,0xFE,0x00]]
        }
        

        while True:

            for element in itertools.cycle(SEND_REQUESTS_KONATZU_EXC[PID_REQUEST]):

                msg = can.Message(arbitration_id=PID_REQUEST,data=element,extended_id=True)
                bus.send(msg)

                if IS_DEBUG:
                    print(msg)

                time.sleep(0.3)

    except KeyboardInterrupt:
        #Catch keyboard interrupt
        #os.system("sudo /sbin/ip link set can0 down")
        print('\n\rKeyboard interrtupt')
        exit()

    except:
        print ("Unexpected error:", sys.exc_info()[0])
